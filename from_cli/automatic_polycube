#!/usr/bin/env python

from pathlib import Path
from argparse import ArgumentParser
from sys import path
from rich.console import Console
from rich.traceback import install

# Add root of HexMeshWorkshop project folder in path
project_root = str(Path(__file__).parent.parent.absolute())
if path[-1] != project_root: path.append(project_root)

# colored and detailed Python traceback
install(show_locals=True,width=Console().width,word_wrap=True)

# own modules
from modules.data_folder_types import *

parser = ArgumentParser(
    prog='automatic_polycube',
    description='Generate a polycube labeling')

parser.add_argument(
    '-i', '--input',
    dest='input',
    metavar='PATH',
    help='path to the input folder',
    required=True)

parser.add_argument(
    '--gui',
    action='store_true',
    dest='gui',
    help='launch the graphical user interface')

args = parser.parse_args()

root_folder = root()
if args.input in root_folder.collections_manager.collections_names():
    print('input is a collection -> batch mode')
    print('NOT IMPLEMENTED')
    exit(0)

input = AbstractDataFolder.instantiate(Path(args.input))
input.automatic_polycube(args.gui)
