#!/usr/bin/env python

from pathlib import Path
from argparse import ArgumentParser
from rich.pretty import pprint
from sys import path
from rich.console import Console
from rich.traceback import install
import logging

# Add root of HexMeshWorkshop project folder in path
project_root = str(Path(__file__).parent.parent.absolute())
if path[-1] != project_root: path.append(project_root)

# colored and detailed Python traceback
install(show_locals=True,width=Console().width,word_wrap=True)

# own modules
from modules.data_folder_types import *

parser = ArgumentParser(
    prog='mesh_stats',
    description='Print mesh stats (over vertices, facets, etc)')

parser.add_argument(
    '-i', '--input',
    dest='input',
    metavar='PATH',
    help='path to the input folder (type tet_mesh or hex_mesh)',
    required=True)

parser.add_argument(
    '--surface',
    action='store_true',
    dest='surface',
    help='path to the input folder (case tet_mesh input folder only)')

args = parser.parse_args()

input: tet_mesh = AbstractDataFolder.instantiate(Path(args.input))
mesh_stats_dict = dict()

if input.type() == 'hex_mesh':
    if args.surface == True:
        logging.error("'--surface' option is only for 'tet_mesh' input folders")
        exit(1)
    mesh_stats_dict = input.get_mesh_stats_dict()
elif input.type() == 'tet_mesh':
    if args.surface == True:
        # compute stats on surface mesh
        mesh_stats_dict = input.get_surface_mesh_stats_dict()
    else:
        # compute stats on volume mesh
        mesh_stats_dict = input.get_tet_mesh_stats_dict()
else:
    logging.error(f"Bad input folder type: '{input.type()}', expecting 'tet_mesh' or 'hex_mesh'")
    exit(1)
pprint(mesh_stats_dict)