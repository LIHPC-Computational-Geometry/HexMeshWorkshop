#!/usr/bin/python

from pathlib import Path
from argparse import ArgumentParser

from sys import path
path.append('../') # required for relative import without package
from HexMeshWorkshop import *

parser = ArgumentParser(
    prog='extract_surface',
    description='Extract the triangle surface mesh of a tetrahedral mesh')

parser.add_argument(
    '-i', '--input',
    dest='input',
    metavar='PATH',
    help='path to the input folder (type tetra_mesh)',
    required=True)

parser.add_argument(
    '--view',
    action='store_true',
    dest='view_output',
    help='visualize the output at the end')

args = parser.parse_args()

cm = CollectionsManager(Settings.data_folder())

if args.input in cm.collections():
    print('input is a colleciton -> batch mode')
    exit(0)

input = AbstractDataFolder.instantiate(Path(args.input))
input.extract_surface()

if args.view_output:
    input.view() # default view is the surface mesh